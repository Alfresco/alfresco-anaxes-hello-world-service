{
	"info": {
		"name": "Anaxes Hello Service Test",
		"_postman_id": "7e0f5155-56b3-6772-9342-0ae251885c9d",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AUTH-41",
			"description": "",
			"item": [
				{
					"name": "Retrieve welcome message (without token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f15debab-8ad8-426d-a4c7-d207bd0059df",
								"type": "text/javascript",
								"exec": [
									"tests[\"status code is 401\"] = responseCode.code === 401;",
									"tests[\"content type is application/json\"] = (postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\"));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\": \"welcome\",\n\t\"value\": \"Hello World!\"\n}"
						},
						"url": {
							"raw": "http://{{serviceIp}}:{{servicePort}}/hello/welcome",
							"protocol": "http",
							"host": [
								"{{serviceIp}}"
							],
							"port": "{{servicePort}}",
							"path": [
								"hello",
								"welcome"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Generate JWT for HR user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var tokens=JSON.parse(responseBody); ",
									"postman.setGlobalVariable(\"kcAccessToken\", tokens.access_token); "
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "activiti",
									"description": "",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"description": "",
									"type": "text"
								},
								{
									"key": "username",
									"value": "hruser",
									"description": "",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"description": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ingressUrl}}/auth/realms/springboot/protocol/openid-connect/token",
							"host": [
								"{{ingressUrl}}"
							],
							"path": [
								"auth",
								"realms",
								"springboot",
								"protocol",
								"openid-connect",
								"token"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve welcome message (with token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"status code is 200\"] = responseCode.code === 200;",
									"tests[\"content type is application/json\"] = (postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\"));",
									"",
									"// test response body",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"key is correct\"] = jsonData.key === \"welcome\";",
									"tests[\"value is correct\"] = jsonData.value === \"Hello World!\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{kcAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\": \"welcome\",\n\t\"value\": \"Hello World!\"\n}"
						},
						"url": {
							"raw": "http://{{serviceIp}}:{{servicePort}}/hello/welcome",
							"protocol": "http",
							"host": [
								"{{serviceIp}}"
							],
							"port": "{{servicePort}}",
							"path": [
								"hello",
								"welcome"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Retrieve welcome message",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"tests[\"content type is application/json\"] = (postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\"));",
							"",
							"// test response body",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"key is correct\"] = jsonData.key === \"welcome\";",
							"tests[\"value is correct\"] = jsonData.value === \"Hello World!\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"key\": \"welcome\",\n\t\"value\": \"Hello World!\"\n}"
				},
				"url": {
					"raw": "http://{{serviceIp}}:{{servicePort}}/hello-service/hello/welcome",
					"protocol": "http",
					"host": [
						"{{serviceIp}}"
					],
					"port": "{{servicePort}}",
					"path": [
						"hello-service",
						"hello",
						"welcome"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test message",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 201\"] = responseCode.code === 201;",
							"tests[\"content type is application/json\"] = (postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\"));",
							"",
							"// test response body",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"key is present\"] = jsonData.key !== undefined;",
							"tests[\"value is correct\"] = jsonData.value === \"Testing 1,2,3\";",
							"",
							"// store the message key ",
							"postman.setGlobalVariable(\"messageKey\", jsonData.key);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"key\": \"{{$guid}}\",\n\t\"value\": \"Testing 1,2,3\"\n}"
				},
				"url": {
					"raw": "http://{{serviceIp}}:{{servicePort}}/hello-service/hello",
					"protocol": "http",
					"host": [
						"{{serviceIp}}"
					],
					"port": "{{servicePort}}",
					"path": [
						"hello-service",
						"hello"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Retrieve test message",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"tests[\"content type is application/json\"] = (postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\"));",
							"",
							"// test response body",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"key is correct\"] = jsonData.key === postman.getGlobalVariable(\"messageKey\");",
							"tests[\"value is correct\"] = jsonData.value === \"Testing 1,2,3\";"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"key\": \"welcome\",\n\t\"value\": \"Hello World!\"\n}"
				},
				"url": {
					"raw": "http://{{serviceIp}}:{{servicePort}}/hello-service/hello/{{messageKey}}",
					"protocol": "http",
					"host": [
						"{{serviceIp}}"
					],
					"port": "{{servicePort}}",
					"path": [
						"hello-service",
						"hello",
						"{{messageKey}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Update welcome message",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"tests[\"content type is application/json\"] = (postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\"));",
							"",
							"// test response body",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"key is correct\"] = jsonData.key === postman.getGlobalVariable(\"messageKey\");",
							"tests[\"value is correct\"] = jsonData.value === \"Testing 1,2,3,4,5\";"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"key\": \"{{messageKey}}\",\n\t\"value\": \"Testing 1,2,3,4,5\"\n}"
				},
				"url": {
					"raw": "http://{{serviceIp}}:{{servicePort}}/hello-service/hello/{{messageKey}}",
					"protocol": "http",
					"host": [
						"{{serviceIp}}"
					],
					"port": "{{servicePort}}",
					"path": [
						"hello-service",
						"hello",
						"{{messageKey}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Delete welcome message",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 204\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{serviceIp}}:{{servicePort}}/hello-service/hello/{{messageKey}}",
					"protocol": "http",
					"host": [
						"{{serviceIp}}"
					],
					"port": "{{servicePort}}",
					"path": [
						"hello-service",
						"hello",
						"{{messageKey}}"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Retrieve deleted test message",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 404\"] = responseCode.code === 404;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"key\": \"welcome\",\n\t\"value\": \"Hello World!\"\n}"
				},
				"url": {
					"raw": "http://{{serviceIp}}:{{servicePort}}/hello-service/hello/{{messageKey}}",
					"protocol": "http",
					"host": [
						"{{serviceIp}}"
					],
					"port": "{{servicePort}}",
					"path": [
						"hello-service",
						"hello",
						"{{messageKey}}"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}